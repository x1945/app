<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:hdp="http://www.springframework.org/schema/hadoop" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


	<beans profile="local">
		<!-- memdb -->
		<!-- <jdbc:embedded-database id="dataSource" type="H2" /> -->
		<!-- memdb set mode -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="org.h2.Driver" />
			<property name="url"
				value="jdbc:h2:mem:test;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=FALSE" />
			<property name="username" value="sa" />
			<property name="password" value="" />
		</bean>
		<!-- memdb create table -->
		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="classpath:h2/table.sql" />
			<jdbc:script location="classpath:h2/data.sql" />
		</jdbc:initialize-database>
	</beans>

	<beans profile="local2">
		<!-- 使用Connection pool -->
		<!-- <bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool" -->
		<!-- destroy-method="dispose"> -->
		<!-- <constructor-arg> -->
		<!-- <bean class="${db.driver}"> -->
		<!-- <property name="URL" value="${db.url}" /> -->
		<!-- <property name="user" value="${db.username}" /> -->
		<!-- <property name="password" value="${db.password}" /> -->
		<!-- </bean> -->
		<!-- </constructor-arg> -->
		<!-- </bean> -->

		<!-- 使用Connection pool -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${db.driver}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
			<property name="initialSize" value="5" />
			<property name="maxActive" value="20" />
			<property name="maxIdle" value="10" />
			<property name="validationQuery" value="select 1" />
		</bean>

		<!-- memdb create table -->
		<!-- <jdbc:initialize-database data-source="dataSource"> -->
		<!-- <jdbc:script location="classpath:h2/table.sql" /> -->
		<!-- <jdbc:script location="classpath:h2/data.sql" /> -->
		<!-- </jdbc:initialize-database> -->
	</beans>

	<beans profile="dev">
		<!-- 使用Connection pool -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${db.driver}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
			<property name="initialSize" value="5" />
			<property name="maxActive" value="20" />
			<property name="maxIdle" value="10" />
			<property name="validationQuery" value="select 1" />
			<property name="testWhileIdle" value="true" />
		</bean>
	</beans>

	<beans profile="test">
		<!-- 使用Connection pool -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${db.driver}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
			<property name="initialSize" value="5" />
			<property name="maxActive" value="20" />
			<property name="maxIdle" value="10" />
			<property name="validationQuery" value="select 1" />
			<property name="testWhileIdle" value="true" />
		</bean>
	</beans>

	<beans profile="prod">
		<!-- 使用Connection pool -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${db.driver}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
			<property name="initialSize" value="10" />
			<property name="maxActive" value="100" />
			<property name="maxIdle" value="50" />
			<property name="validationQuery" value="select 1" />
			<property name="testWhileIdle" value="true" />
		</bean>
	</beans>

	<beans>
		<!-- DataSourceTransactionManager -->
		<bean id="txManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>

		<tx:advice id="txAdvice" transaction-manager="txManager">
			<tx:attributes>
				<!-- all methods below are read-only -->
				<tx:method name="page*" read-only="true" />
				<tx:method name="query*" read-only="true" />
				<tx:method name="list*" read-only="true" />
				<tx:method name="find*" read-only="true" />
				<tx:method name="get*" read-only="true" />
				<tx:method name="select*" read-only="true" />

				<!-- other methods use the default transaction settings (see below) -->
				<tx:method name="*" timeout="45000" rollback-for="Throwable"
					propagation="REQUIRED" />
				<!-- <tx:method name="*" timeout="45000" rollback-for="Exception" propagation="REQUIRED" 
					/> -->
				<!-- timeout in seconds -->
			</tx:attributes>
		</tx:advice>

		<aop:config proxy-target-class="true">
			<aop:pointcut id="controllerOperation" expression="execution(* app.service..*.*(..))" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="controllerOperation" />
		</aop:config>
	</beans>
</beans>